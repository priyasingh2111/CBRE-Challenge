# -*- coding: utf-8 -*-
"""cbre_challenge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XdKm84QC1vXQd4pCzwotGuPUOJmNHaKi
"""

import numpy as np
import pandas as pd
from sklearn.ensemble import BaggingClassifier
from sklearn.tree import DecisionTreeClassifier
from numpy import mean
from numpy import std
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import RepeatedStratifiedKFold

# Load the data and split into features and target
data = pd.read_excel("/content/PHILADELPHIA_PARCEL_DATA_COPY.xlsx")
data = data.reset_index()
X = data.iloc[:, :6].values
y = data.iloc[:, -1].values
print(y)
print(X)

# Create a Decision Tree classifier
dt_clf = DecisionTreeClassifier()
print(dt_clf)
# Create the Bagging Classifier with the Decision Tree classifier as the base estimator
bagged_tree = BaggingClassifier(base_estimator=dt_clf, n_estimators=3, random_state=20)
print(bagged_tree)

data = np.array(data, dtype=float)

df = pd.DataFrame(data)
print(df.dtypes)

print(X)

print(y)

bagged_tree.fit(X, y)

y_pred = bagged_tree.predict(X)

# Use the Bagged Tree to predict the target values
#y_pred = bagged_tree.predict(X)

# Calculate the accuracy of the Bagged Tree
accuracy = np.mean(y_pred == y)
print("Accuracy:", accuracy)

y_train = bagged_tree.predict(X_train)

accuracy = np.mean(y_train == y)
print("Accuracy:", accuracy)

X_test = np.array([[22271, 68780, 343900, 1720, 270000, 102]])   ##4 
predictions = bagged_tree.predict(X_test)

print(predictions)

X_test = np.array([[667, 33160, 165800, 940, 33500, 100]])  ##0
predictions = bagged_tree.predict(X_test)

print(predictions)

X_test = np.array([[537, 32000, 160000, 900, 170000, 100]])
predictions = bagged_tree.predict(X_test)

print(predictions)   ##0